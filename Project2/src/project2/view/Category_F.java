/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project2.view;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.awt.Image;
import java.awt.desktop.PreferencesEvent;
import java.awt.event.KeyEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.sql.*;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.*;
import javax.swing.table.TableModel;
import project2.admin.DOB.Category;
import project2.admin.DOB.ConnectDb;
import project2.admin.DOB.History;
import project2.admin.DOB.Product;
import static project2.admin.DOB.Product.cnn;
import static project2.admin.DOB.Product.pst;
import static project2.admin.DOB.Product.rs;
import project2.admin.DOB.TheModel;
import project2.admin.DOB.UpdateTable;
import project2.admin.edit.EditCategory;
import project2.admin.formAdd.AddProduct;
import project2.admin.infofmation_admin.ProductInformation;
import static project2.view.HomePage.cnn;
import static project2.view.HomePage.pst;
import static project2.view.HomePage.rs;
/**
 *
 * @author son
 */
public class Category_F extends javax.swing.JFrame {
    public static PreparedStatement pst = null;
    public static ResultSet rs =null;
    public static Connection cnn = ConnectDb.getConnection();
    AddProduct show_data_product = new AddProduct();
    String sql="Select ID,Name FROM Category order by ID asc";
    DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");  
    LocalDateTime now = LocalDateTime.now();
    String nowTime = dtf.format(now);
    /**
     * Creates new form Cat
     */
    public Category_F() {
        initComponents();
        this.setLocationRelativeTo(null);
        fillCombobox();
        UpdateTable.LoadData(sql, tbHome);
        this.txtUser.setText("User Name: "+FormLogin.userName);
        tbHome.setRowHeight(100);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        txthome = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        txtBook = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        txtHistory = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        txtSup1 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        txtSup2 = new javax.swing.JLabel();
        boxCategory = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbHome = new javax.swing.JTable();
        btnAddCategory = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        txtUser = new javax.swing.JLabel();
        lblImage = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lbUser = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(209, 198, 189));

        jPanel3.setBackground(new java.awt.Color(243, 51, 30));
        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txthome.setBackground(new java.awt.Color(235, 57, 23));
        txthome.setFont(new java.awt.Font("DialogInput", 0, 14)); // NOI18N
        txthome.setForeground(new java.awt.Color(236, 224, 224));
        txthome.setText(" Quản Lý Truyện");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txthome, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txthome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(105, 234, 21));
        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setForeground(new java.awt.Color(24, 10, 10));
        jPanel4.setPreferredSize(new java.awt.Dimension(95, 18));
        jPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel4MouseClicked(evt);
            }
        });

        txtBook.setFont(new java.awt.Font("DialogInput", 0, 14)); // NOI18N
        txtBook.setForeground(new java.awt.Color(25, 16, 7));
        txtBook.setText(" Truyện");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtBook, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(105, 234, 21));
        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.setPreferredSize(new java.awt.Dimension(95, 23));

        txtHistory.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtHistory.setForeground(new java.awt.Color(23, 20, 17));
        txtHistory.setText("   Lịch sử");
        txtHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtHistoryMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtHistory, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtHistory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel6.setBackground(new java.awt.Color(105, 234, 21));
        jPanel6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel6.setPreferredSize(new java.awt.Dimension(95, 23));

        txtSup1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtSup1.setForeground(new java.awt.Color(23, 20, 17));
        txtSup1.setText("Thể Loại");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtSup1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtSup1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel7.setBackground(new java.awt.Color(105, 234, 21));
        jPanel7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel7.setPreferredSize(new java.awt.Dimension(95, 23));

        txtSup2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtSup2.setForeground(new java.awt.Color(23, 20, 17));
        txtSup2.setText("       Kho");
        txtSup2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSup2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtSup2, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtSup2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        boxCategory.setBackground(new java.awt.Color(194, 203, 187));
        boxCategory.setFont(new java.awt.Font("DialogInput", 0, 14)); // NOI18N
        boxCategory.setForeground(new java.awt.Color(241, 22, 22));
        boxCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Thể Loại" }));
        boxCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxCategoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 203, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 49, Short.MAX_VALUE)
        );

        tbHome.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        tbHome.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbHomeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbHome);

        btnAddCategory.setBackground(new java.awt.Color(51, 173, 255));
        btnAddCategory.setText("Add ");
        btnAddCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCategoryActionPerformed(evt);
            }
        });

        btndelete.setBackground(new java.awt.Color(255, 112, 77));
        btndelete.setText("Delete ");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(237, 68, 12));
        jButton1.setForeground(new java.awt.Color(254, 254, 254));
        jButton1.setText("Logout");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(btnAddCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(235, 235, 235)
                .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(239, 239, 239))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnAddCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtSearch.setForeground(new java.awt.Color(204, 204, 204));
        txtSearch.setText("Search");
        txtSearch.setToolTipText("Search");
        txtSearch.setActionCommand("<Not Set>");
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
        });

        jPanel9.setBackground(new java.awt.Color(105, 234, 21));
        jPanel9.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel9.setPreferredSize(new java.awt.Dimension(95, 23));

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel1.setText(" Xuất Dữ Liệu");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel1MousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(boxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbUser, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1162, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(boxCategory, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(lbUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jPanel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseClicked
        this.setVisible(false);
        HomePage home = new HomePage();
        home.setVisible(true);
    }//GEN-LAST:event_jPanel4MouseClicked
     public ArrayList<ProductInformation> getDataSearchBtn(){
        ArrayList<ProductInformation> list = new ArrayList<ProductInformation>();
        String nameSearch = txtSearch.getText();
        try {
            String sql ="Select * from Product where name_product='"+nameSearch.trim()+"'";
            pst = cnn.prepareStatement(sql);
            rs = pst.executeQuery();
            while(rs.next()){
                ProductInformation p = new ProductInformation(
                        rs.getString("id_product"),
                        rs.getString("name_product"),
                        rs.getString("category_name"),
                        rs.getBytes("images"),
                        rs.getString("describes"),
                        rs.getFloat("price"),
                        rs.getInt("quantity")
                        
                );
                list.add(p);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Product.class.getName()).log(Level.SEVERE, null, ex);
        }
        return list;
    }
    public ArrayList<ProductInformation> getDataSearchBox(){
        ArrayList<ProductInformation> list = new ArrayList<ProductInformation>();
        String nameSearch = boxCategory.getSelectedItem().toString();
        try {
            String sql = "Select * from Product where category_name='"+nameSearch+"'";
            pst = cnn.prepareStatement(sql);
            rs = pst.executeQuery();
            while(rs.next()){
                ProductInformation p = new ProductInformation(
                        rs.getString("id_product"),
                        rs.getString("name_product"),
                        rs.getString("category_name"),
                        rs.getBytes("images"),
                        rs.getString("describes"),
                        rs.getFloat("price"),
                        rs.getInt("quantity")
                        
                );
                list.add(p);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Product.class.getName()).log(Level.SEVERE, null, ex);
        }
        return list;
    }
    public void populateTableSearchBox(){
        Product pro = new Product();
        ArrayList<ProductInformation> list = this.getDataSearchBox();
        String[] colum = {"id","Name","Category","Image","Decritble","Price","Quantity"};
        Object[][] rows = new Object[list.size()][7];
        for(int i = 0 ; i < list.size();i++){
            rows[i][0] = list.get(i).getId();
            rows[i][1] = list.get(i).getName();
            rows[i][5] = list.get(i).getPrice();
            rows[i][4] = list.get(i).getDecritble();
            rows[i][2] = list.get(i).getCategory();
            rows[i][6] = list.get(i).getQuantity();
            if((list.get(i).getMyImage())!= null){
                byte[] imageData = list.get(i).getMyImage();
                Image image = new ImageIcon(imageData).getImage();
                image = image.getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon imageIcon = new ImageIcon(image);                                
                rows[i][3] = imageIcon;
            }else{
                rows[i][3]=null;
            }
        }
        TheModel model = new TheModel(rows, colum);
        tbHome.setModel(model);
        tbHome.setRowHeight(100);
        tbHome.getColumnModel().getColumn(3).setPreferredWidth(120);
        tbHome.getColumnModel().getColumn(3).setPreferredWidth(120);
        tbHome.getColumnModel().getColumn(0).setHeaderValue("Id");
        tbHome.getColumnModel().getColumn(1).setHeaderValue("Name");
        tbHome.getColumnModel().getColumn(2).setHeaderValue("Category");
        tbHome.getColumnModel().getColumn(3).setHeaderValue("Image");
        tbHome.getColumnModel().getColumn(4).setHeaderValue("Decritble");
        tbHome.getColumnModel().getColumn(5).setHeaderValue("Price");
        tbHome.getColumnModel().getColumn(6).setHeaderValue("Quantity");
    }
    public void populateTableSearchBtn(){
        Product pro = new Product();
        ArrayList<ProductInformation> list = this.getDataSearchBtn();
        String[] colum = {"id","Name","Category","Image","Decritble","Price","Quantity"};
        Object[][] rows = new Object[list.size()][7];
        for(int i = 0 ; i < list.size();i++){
            rows[i][0] = list.get(i).getId();
            rows[i][1] = list.get(i).getName();
            rows[i][5] = list.get(i).getPrice();
            rows[i][4] = list.get(i).getDecritble();
            rows[i][2] = list.get(i).getCategory();
            rows[i][6] = list.get(i).getQuantity();
            if((list.get(i).getMyImage())!= null){
                byte[] imageData = list.get(i).getMyImage();
                Image image = new ImageIcon(imageData).getImage();
                image = image.getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon imageIcon = new ImageIcon(image);                                
                rows[i][3] = imageIcon;
            }else{
                rows[i][3]=null;
            }
        }
        TheModel model = new TheModel(rows, colum);
        tbHome.setModel(model);
        tbHome.setRowHeight(100);
        tbHome.getColumnModel().getColumn(3).setPreferredWidth(120);
        tbHome.getColumnModel().getColumn(3).setPreferredWidth(120);
        tbHome.getColumnModel().getColumn(0).setHeaderValue("Id");
        tbHome.getColumnModel().getColumn(1).setHeaderValue("Name");
        tbHome.getColumnModel().getColumn(2).setHeaderValue("Category");
        tbHome.getColumnModel().getColumn(3).setHeaderValue("Image");
        tbHome.getColumnModel().getColumn(4).setHeaderValue("Decritble");
        tbHome.getColumnModel().getColumn(5).setHeaderValue("Price");
        tbHome.getColumnModel().getColumn(6).setHeaderValue("Quantity");
    }
    public void tableData(){
        String sql = "Select * from Product";
        try {
            pst = cnn.prepareStatement(sql);
            rs=pst.executeQuery();
            while(rs.next()){
                String name = rs.getString("name_product");
                
            }
        } catch (Exception e) {
        }
    }
    public void populateTable(){
        Product pro = new Product();
        ArrayList<ProductInformation> list = pro.getData();
        String[] colum = {"id","Name","Category","Image","Decritble","Price","Quantity"};
        Object[][] rows = new Object[list.size()][7];
        for(int i = 0 ; i < list.size();i++){
            rows[i][0] = list.get(i).getId();
            rows[i][1] = list.get(i).getName();
            rows[i][5] = list.get(i).getPrice();
            rows[i][4] = list.get(i).getDecritble();
            rows[i][2] = list.get(i).getCategory();
            rows[i][6] = list.get(i).getQuantity();
            if((list.get(i).getMyImage())!= null){
                 byte[] imageData = list.get(i).getMyImage();
                Image image = new ImageIcon(imageData).getImage();
                image = image.getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon imageIcon = new ImageIcon(image);                                
                rows[i][3] = imageIcon;
            }else{
                rows[i][3]=null;
            }
        }
        TheModel model = new TheModel(rows, colum);
        tbHome.setModel(model);
        tbHome.setRowHeight(120);
        tbHome.getColumnModel().getColumn(3).setPreferredWidth(120);
        tbHome.getColumnModel().getColumn(3).setPreferredWidth(120);
        tbHome.getColumnModel().getColumn(0).setHeaderValue("Id");
        tbHome.getColumnModel().getColumn(1).setHeaderValue("Name");
        tbHome.getColumnModel().getColumn(2).setHeaderValue("Category");
        tbHome.getColumnModel().getColumn(3).setHeaderValue("Image");
        tbHome.getColumnModel().getColumn(4).setHeaderValue("Decritble");
        tbHome.getColumnModel().getColumn(5).setHeaderValue("Price");
        tbHome.getColumnModel().getColumn(6).setHeaderValue("Quantity");
//
    
       }
     private void fillCombobox(){
        String sql_name_category = "Select * FROM Category order by ID asc";
        try {
            pst = cnn.prepareStatement(sql_name_category);
            rs = pst.executeQuery();
            while(rs.next()){
                String name = rs.getString("Name");
                boxCategory.addItem(name);
            }
        } catch (SQLException ex) {
        }
        
    }
    private void boxCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxCategoryActionPerformed

        try {
            String nameSearch = boxCategory.getSelectedItem().toString();
            String sqlSearchName = "Select * from Product where category_name='"+nameSearch+"'";
            pst =cnn.prepareStatement(sqlSearchName);
            rs = pst.executeQuery();
            if(rs.next()){
                populateTableSearchBox();
            }else{
                populateTable();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_boxCategoryActionPerformed
    EditCategory show_data_category = new EditCategory();
    private void tbHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHomeMouseClicked
        int row = tbHome.getSelectedRow();
        TableModel model = tbHome.getModel();
        String id = model.getValueAt(row,0).toString();
        String name = model.getValueAt(row, 1).toString();
        show_data_category.setVisible(true);
        show_data_category.pack();
        show_data_category.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        show_data_category.txtName.setText(name);
        show_data_category.txtId.setText(id);
    }//GEN-LAST:event_tbHomeMouseClicked

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed

    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        if(txtSearch.getForeground()!=Color.BLACK){
            if(txtSearch.getText().equals("Search")){
                txtSearch.setText("");
            }
        }
        txtSearch.setForeground(Color.BLACK);
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            try {
                String nameSearch = txtSearch.getText();
                String sqlSearchName = "Select * from Product where name_product='"+nameSearch.trim()+"'";
                pst =cnn.prepareStatement(sqlSearchName);
                rs = pst.executeQuery();
                if(rs.next()){
                    populateTableSearchBtn();
                }else{
                    populateTable();
                }
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_txtSearchKeyPressed

    private void btnAddCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCategoryActionPerformed
        this.setVisible(false);
        EditCategory addctg = new EditCategory();
        addctg.setVisible(true);
    }//GEN-LAST:event_btnAddCategoryActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        try {
            int row = tbHome.getSelectedRow();
            TableModel model = tbHome.getModel();
            String id = model.getValueAt(row,0).toString();
            Category.DeleteCategory(id);
            this.setVisible(false);
            Category_F deleteLoad = new Category_F();
            deleteLoad.setVisible(true);
            Statement statement = cnn.createStatement();
            statement.close();
        } catch (SQLException ex) {
        }
    }//GEN-LAST:event_btndeleteActionPerformed
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
        FormLogin loginUser = new FormLogin();
        loginUser.setVisible(true);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtSup2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSup2MouseClicked
        this.setVisible(false);
        repositoryF re =new repositoryF();
        re.setVisible(true);

    }//GEN-LAST:event_txtSup2MouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked

    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MousePressed
        // TODO add your handling code here:
        File file =  new File("/home/son/Desktop/Project_2_book_store/Export");
        JFileChooser filecchooser = new JFileChooser(file);
        filecchooser.setDialogTitle("File Save");
        int userSelection = filecchooser.showSaveDialog(this);
        if(userSelection == JFileChooser.APPROVE_OPTION){
            File fileToSave = filecchooser.getSelectedFile();
            FileWriter fw;
            try {
                fw = new FileWriter(fileToSave);
                BufferedWriter bw = new BufferedWriter(fw);
                for(int i = 0 ; i < tbHome.getRowCount() ; i++){
                    for(int j = 0 ; j <tbHome.getColumnCount();j++){
                        bw.write(tbHome.getValueAt(i,j).toString()+", ");
                    }
                    bw.newLine();
                }
                bw.close();
                fw.close();
                JOptionPane.showMessageDialog(null, " Susses laoding file  !!!");
                String name_file = fileToSave.getName();
                History.Insert(name_file, this.nowTime);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, " Error massage !!!");
            }

        }
    }//GEN-LAST:event_jLabel1MousePressed

    private void txtHistoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtHistoryMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        HistoryForm his = new HistoryForm();
        his.setVisible(true);
    }//GEN-LAST:event_txtHistoryMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Category_F.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Category_F.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Category_F.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Category_F.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Category_F().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JComboBox<String> boxCategory;
    private javax.swing.JButton btnAddCategory;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbUser;
    private javax.swing.JLabel lblImage;
    private javax.swing.JTable tbHome;
    private javax.swing.JLabel txtBook;
    private javax.swing.JLabel txtHistory;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JLabel txtSup1;
    private javax.swing.JLabel txtSup2;
    public javax.swing.JLabel txtUser;
    private javax.swing.JLabel txthome;
    // End of variables declaration//GEN-END:variables
}
